name: CI
on: [push, pull_request]
env:
  NODE_VERSION_USED_FOR_DEVELOPMENT: 17
jobs:
  lint:
    name: Lint source files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          cache: npm
          node-version: ${{ env.NODE_VERSION_USED_FOR_DEVELOPMENT }}

      - name: Install Dependencies
        run: npm ci --ignore-scripts

      - name: Lint ESLint
        run: npm run lint

      - name: Check Types
        run: npm run check

      - name: Lint Prettier
        run: npm run prettier:check

      - name: Spellcheck
        run: npm run check:spelling

  checkForCommonlyIgnoredFiles:
    name: Check for commonly ignored files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Check if commit contains files that should be ignored
        run: |
          git clone --depth 1 https://github.com/github/gitignore.git &&
          cat gitignore/Node.gitignore $(find gitignore/Global -name "*.gitignore" | grep -v ModelSim) > all.gitignore &&
          if  [[ "$(git ls-files -iX all.gitignore)" != "" ]]; then
            echo "::error::Please remove these files:"
            git ls-files -iX all.gitignore
            exit 1
          fi

  # checkPackageLock:
  #   name: Check health of package-lock.json file
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2
  #       with:
  #         persist-credentials: false

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         cache: npm
  #         node-version: ${{ env.NODE_VERSION_USED_FOR_DEVELOPMENT }}

  #     - name: Install Dependencies
  #       run: npm ci --ignore-scripts

  #     - name: Check that package-lock.json doesn't have conflicts
  #       run: npm ls --depth 999

  #     - name: Run npm install
  #       run: npm install --force --package-lock-only --ignore-scripts --engine-strict --strict-peer-deps

  #     - name: Check that package-lock.json is in sync with package.json
  #       run: git diff --exit-code package-lock.json

  test:
    name: Run tests on Node v${{ matrix.node_version_to_setup }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version_to_setup: [12, 14, 16, 17]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Setup Node.js v${{ matrix.node_version_to_setup }}
        uses: actions/setup-node@v2
        with:
          cache: npm
          node-version: ${{ matrix.node_version_to_setup }}

      - name: Install Dependencies
        run: npm ci --ignore-scripts

      - name: Run Tests
        run: npm run testonly
